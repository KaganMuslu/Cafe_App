// <auto-generated />
using System;
using Cafe_App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cafe_App.Migrations
{
    [DbContext(typeof(IdentityDataContext))]
    partial class IdentityDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cafe_App.Data.Kampanya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BaslangıcTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Indirim")
                        .HasColumnType("float");

                    b.Property<int>("SartSiparisSayisi")
                        .HasColumnType("int");

                    b.Property<int>("SartTutar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kampanyalar");
                });

            modelBuilder.Entity("Cafe_App.Data.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("Tur")
                        .HasColumnType("int");

                    b.Property<float>("Tutar")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("Cafe_App.Models.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Koy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mahalle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Sokak")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tarif")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("Cafe_App.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Cafe_App.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Cafe_App.Models.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KasaId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("MutfakId")
                        .HasColumnType("int");

                    b.Property<bool>("Okundu")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KasaId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("MutfakId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("Cafe_App.Models.Durum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<string>("Yer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Zaman")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.ToTable("Durumlar");
                });

            modelBuilder.Entity("Cafe_App.Models.KampanyaMusteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Durum")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("GecerlilikTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("KampanyaId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KampanyaId");

                    b.HasIndex("MusteriId");

                    b.ToTable("KampanyaMusteriler");
                });

            modelBuilder.Entity("Cafe_App.Models.Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Bakiye")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Kasalar");
                });

            modelBuilder.Entity("Cafe_App.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Cafe_App.Models.Malzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Fiyat")
                        .HasColumnType("float");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Malzemeler");
                });

            modelBuilder.Entity("Cafe_App.Models.Masa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("OdenenTutar")
                        .HasColumnType("float");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("QR")
                        .HasColumnType("longtext");

                    b.Property<float>("Tutar")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Masalar");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaOzellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("OzellikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("OzellikId");

                    b.ToTable("MasaOzellikler");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaRezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("MasaRezervasyonlar");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MasaId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("SiparisId");

                    b.ToTable("MasaSiparisler");
                });

            modelBuilder.Entity("Cafe_App.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Akitf")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Fotograf")
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("IndirimTarihi")
                        .HasColumnType("date");

                    b.Property<int>("IndirimYuzdesi")
                        .HasColumnType("int");

                    b.Property<float>("IndirimliFiyat")
                        .HasColumnType("float");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("Cafe_App.Models.MenuUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UrunId");

                    b.ToTable("MenuUrunler");
                });

            modelBuilder.Entity("Cafe_App.Models.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Dogumtarihi")
                        .HasColumnType("date");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("KayitTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Cafe_App.Models.Mutfak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Mutfaklar");
                });

            modelBuilder.Entity("Cafe_App.Models.Ozellik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Ozellikler");
                });

            modelBuilder.Entity("Cafe_App.Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("AdresId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BaslamaTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DogumTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fotograf")
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Maas")
                        .HasColumnType("float");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("RolId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("Cafe_App.Models.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BaslangıcSaat")
                        .HasColumnType("date");

                    b.Property<DateOnly>("BıtısSaat")
                        .HasColumnType("date");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("KisiSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Talep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("TalepTarihi")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("Cafe_App.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Cafe_App.Models.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("KasaId")
                        .HasColumnType("int");

                    b.Property<int?>("MutfakId")
                        .HasColumnType("int");

                    b.Property<string>("Not")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("OdemeDurum")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KasaId");

                    b.HasIndex("MutfakId");

                    b.HasIndex("YorumId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Cafe_App.Models.SiparisMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("SiparisId");

                    b.ToTable("SiparisMenuler");
                });

            modelBuilder.Entity("Cafe_App.Models.SiparisUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.HasIndex("YorumId");

                    b.ToTable("SiparisUrunler");
                });

            modelBuilder.Entity("Cafe_App.Models.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("MaxStok")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("MinStok")
                        .HasColumnType("int");

                    b.Property<int?>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId")
                        .IsUnique();

                    b.HasIndex("TedarikciId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("Cafe_App.Models.StokGirdi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AlısFiyati")
                        .HasColumnType("float");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("SonStokMiktari")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId");

                    b.HasIndex("TedarikciId");

                    b.ToTable("StokGirdiler");
                });

            modelBuilder.Entity("Cafe_App.Models.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("AdresId")
                        .HasColumnType("int");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Firma")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("KayitTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("Cafe_App.Models.Teslimat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Cıkıs")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OdemeDurum")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<bool>("TeslimDurum")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Varis")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Teslimatlar");
                });

            modelBuilder.Entity("Cafe_App.Models.TeslimatAdres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("MusteriId");

                    b.ToTable("TeslimatAdresler");
                });

            modelBuilder.Entity("Cafe_App.Models.TeslimatSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("OluşturmaTarihi")
                        .HasColumnType("date");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("TeslimatId")
                        .HasColumnType("int");

                    b.Property<int>("YorumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.HasIndex("SiparisId");

                    b.HasIndex("TeslimatId");

                    b.ToTable("TeslimatSiparisler");
                });

            modelBuilder.Entity("Cafe_App.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Akitf")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Fotograf")
                        .HasColumnType("longtext");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("IndirimTarihi")
                        .HasColumnType("date");

                    b.Property<int>("IndirimYuzdesi")
                        .HasColumnType("int");

                    b.Property<float>("IndirimliFiyat")
                        .HasColumnType("float");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Cafe_App.Models.UrunMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<bool>("Secenek")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunMalzemeler");
                });

            modelBuilder.Entity("Cafe_App.Models.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Begenme")
                        .HasColumnType("int");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<bool>("Gorunurluk")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Tarih")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cafe_App.Data.Odeme", b =>
                {
                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany("Odemelers")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Cafe_App.Models.Adres", b =>
                {
                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Adrelers")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Cafe_App.Models.Bildirim", b =>
                {
                    b.HasOne("Cafe_App.Models.Kasa", "Kasa")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("KasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Mutfak", "Mutfak")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("MutfakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Personel", "Personel")
                        .WithMany("Bildirimlers")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kasa");

                    b.Navigation("Musteri");

                    b.Navigation("Mutfak");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Cafe_App.Models.Durum", b =>
                {
                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany("Durumlars")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Cafe_App.Models.KampanyaMusteri", b =>
                {
                    b.HasOne("Cafe_App.Data.Kampanya", null)
                        .WithMany("KampanyaMusteris")
                        .HasForeignKey("KampanyaId");

                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Kampanyalars")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Cafe_App.Models.Masa", b =>
                {
                    b.HasOne("Cafe_App.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Personel", "Personel")
                        .WithMany("Masalars")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Kategori");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaOzellik", b =>
                {
                    b.HasOne("Cafe_App.Models.Masa", "Masa")
                        .WithMany("MasaOzelliks")
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Ozellik", "Ozellik")
                        .WithMany()
                        .HasForeignKey("OzellikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Ozellik");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaRezervasyon", b =>
                {
                    b.HasOne("Cafe_App.Models.Masa", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Rezervasyon", "Rezervasyon")
                        .WithMany()
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("Cafe_App.Models.MasaSiparis", b =>
                {
                    b.HasOne("Cafe_App.Models.Masa", "Masa")
                        .WithMany("MasaSipariss")
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masa");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Cafe_App.Models.Menu", b =>
                {
                    b.HasOne("Cafe_App.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Cafe_App.Models.MenuUrun", b =>
                {
                    b.HasOne("Cafe_App.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Cafe_App.Models.Personel", b =>
                {
                    b.HasOne("Cafe_App.Models.Adres", null)
                        .WithMany("Personellers")
                        .HasForeignKey("AdresId");

                    b.HasOne("Cafe_App.Models.Rol", "Rol")
                        .WithMany("Personellers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Cafe_App.Models.Siparis", b =>
                {
                    b.HasOne("Cafe_App.Models.Kasa", "Kasa")
                        .WithMany("Siparislers")
                        .HasForeignKey("KasaId");

                    b.HasOne("Cafe_App.Models.Mutfak", "Mutfak")
                        .WithMany("Siparislers")
                        .HasForeignKey("MutfakId");

                    b.HasOne("Cafe_App.Models.Yorum", null)
                        .WithMany("Siparislers")
                        .HasForeignKey("YorumId");

                    b.Navigation("Kasa");

                    b.Navigation("Mutfak");
                });

            modelBuilder.Entity("Cafe_App.Models.SiparisMenu", b =>
                {
                    b.HasOne("Cafe_App.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Cafe_App.Models.SiparisUrun", b =>
                {
                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Yorum", "Yorum")
                        .WithMany()
                        .HasForeignKey("YorumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");

                    b.Navigation("Yorum");
                });

            modelBuilder.Entity("Cafe_App.Models.Stok", b =>
                {
                    b.HasOne("Cafe_App.Models.Malzeme", "Malzeme")
                        .WithOne("Stok")
                        .HasForeignKey("Cafe_App.Models.Stok", "MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Tedarikci", null)
                        .WithMany("Stoklars")
                        .HasForeignKey("TedarikciId");

                    b.Navigation("Malzeme");
                });

            modelBuilder.Entity("Cafe_App.Models.StokGirdi", b =>
                {
                    b.HasOne("Cafe_App.Models.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Tedarikci", "Tedarikci")
                        .WithMany("Stokgirdilers")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("Cafe_App.Models.Tedarikci", b =>
                {
                    b.HasOne("Cafe_App.Models.Adres", null)
                        .WithMany("Tedarikcilers")
                        .HasForeignKey("AdresId");
                });

            modelBuilder.Entity("Cafe_App.Models.Teslimat", b =>
                {
                    b.HasOne("Cafe_App.Models.Personel", "Personel")
                        .WithMany("Teslimatlars")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Cafe_App.Models.TeslimatAdres", b =>
                {
                    b.HasOne("Cafe_App.Models.Adres", "Adres")
                        .WithMany("Teslimatadreslers")
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Teslimatadreslers")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Cafe_App.Models.TeslimatSiparis", b =>
                {
                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Teslimatsiparislers")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Siparis", "Siparis")
                        .WithMany("Teslimatsiparislers")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Teslimat", "Teslimat")
                        .WithMany("Teslimatsiparislers")
                        .HasForeignKey("TeslimatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Siparis");

                    b.Navigation("Teslimat");
                });

            modelBuilder.Entity("Cafe_App.Models.Urun", b =>
                {
                    b.HasOne("Cafe_App.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Cafe_App.Models.UrunMalzeme", b =>
                {
                    b.HasOne("Cafe_App.Models.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Cafe_App.Models.Yorum", b =>
                {
                    b.HasOne("Cafe_App.Models.Musteri", "Musteri")
                        .WithMany("Yorumlars")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Cafe_App.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cafe_App.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cafe_App.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Cafe_App.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cafe_App.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cafe_App.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cafe_App.Data.Kampanya", b =>
                {
                    b.Navigation("KampanyaMusteris");
                });

            modelBuilder.Entity("Cafe_App.Models.Adres", b =>
                {
                    b.Navigation("Personellers");

                    b.Navigation("Tedarikcilers");

                    b.Navigation("Teslimatadreslers");
                });

            modelBuilder.Entity("Cafe_App.Models.Kasa", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Siparislers");
                });

            modelBuilder.Entity("Cafe_App.Models.Malzeme", b =>
                {
                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Cafe_App.Models.Masa", b =>
                {
                    b.Navigation("MasaOzelliks");

                    b.Navigation("MasaSipariss");
                });

            modelBuilder.Entity("Cafe_App.Models.Musteri", b =>
                {
                    b.Navigation("Adrelers");

                    b.Navigation("Bildirimlers");

                    b.Navigation("Kampanyalars");

                    b.Navigation("Teslimatadreslers");

                    b.Navigation("Teslimatsiparislers");

                    b.Navigation("Yorumlars");
                });

            modelBuilder.Entity("Cafe_App.Models.Mutfak", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Siparislers");
                });

            modelBuilder.Entity("Cafe_App.Models.Personel", b =>
                {
                    b.Navigation("Bildirimlers");

                    b.Navigation("Masalars");

                    b.Navigation("Teslimatlars");
                });

            modelBuilder.Entity("Cafe_App.Models.Rol", b =>
                {
                    b.Navigation("Personellers");
                });

            modelBuilder.Entity("Cafe_App.Models.Siparis", b =>
                {
                    b.Navigation("Durumlars");

                    b.Navigation("Odemelers");

                    b.Navigation("Teslimatsiparislers");
                });

            modelBuilder.Entity("Cafe_App.Models.Tedarikci", b =>
                {
                    b.Navigation("Stokgirdilers");

                    b.Navigation("Stoklars");
                });

            modelBuilder.Entity("Cafe_App.Models.Teslimat", b =>
                {
                    b.Navigation("Teslimatsiparislers");
                });

            modelBuilder.Entity("Cafe_App.Models.Yorum", b =>
                {
                    b.Navigation("Siparislers");
                });
#pragma warning restore 612, 618
        }
    }
}
